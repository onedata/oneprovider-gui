{{#unless previewMode}}
  {{#if space.currentUserIsOwner}}
    <div class="owner-info-line space-owner-info-line">
      <span class="space-owner-info-label">{{tt this "spaceOwner"}}</span>
      <OneLabelTip @title={{tt this "spaceOwnerTip"}} />
    </div>
  {{/if}}
  <div class="owner-info-line file-owner-info-line">
    <strong class="owner-info-label">{{tt this "owner"}}:</strong>
    {{#if viewModel.filesHaveSameOwner}}
      {{record-info-with-icon
        record=owner
        errorReason=errorReasonForOwnerProxy
      }}
    {{else}}
      {{tt this "multipleOwners" count=viewModel.ownersCount}}
    {{/if}}
  </div>
{{/unless}}
{{#if (and posixViewActive (not isPosixActivePermissionsType))}}
  <div class="alert alert-warning alert-simple-info">
    {{viewModel.posixNotActiveText}}
  </div>
{{/if}}
{{#if (and posixViewActive (not filesHaveCompatiblePosixPermissions))}}
  {{#if effectiveReadonly}}
    <div class="alert alert-info alert-simple-info">
      {{tt this "differentPosixReadonly"}}
    </div>
  {{else}}
    <div class="alert alert-warning alert-simple-info">
      {{#if viewModel.isPosixPermissionsIncompatibilityAccepted}}
        <div class="row">{{tt this "differentPosixCleared.info"}}</div>
        <ul>
          <li>{{tt this "differentPosixCleared.discardInfo"}}</li>
          <li>{{tt this "differentPosixCleared.saveInfo"}}</li>
        </ul>
      {{else}}
        {{tt this "differentPosix"}}
        <div class="row alert-simple-info-btn">
          {{#bs-button
            class="btn btn-warning btn-sm open-posix-editor clear-permissions-btn"
            onClick=(action "acceptPosixIncompatibility")
          }}
            {{tt this "clearPosix"}}
          {{/bs-button}}
        </div>
      {{/if}}
    </div>
  {{/if}}
{{/if}}
{{posix-permissions-editor
  lastResetTime=viewModel.lastResetTime
  initialPermissions=initialPosixPermissions
  readonly=viewModel.isPosixEditorReadonly
  readonlyTip=effectiveReadonlyTip
  onChange=(action "posixPermissionsChanged")
  class=(unless (and posixViewActive posixPermissionsCompatible) "hidden")
}}
{{#render-later
  tagName="div"
  triggerRender=aclViewActive
  class=(unless aclViewActive "hidden")
}}
  {{#unless (eq filesType "mixed")}}
    {{#if isAclForbiddenError}}
      <ResourceLoadError
        @type="forbidden"
        @message={{viewModel.forbiddenAclEditorText}}
      />
    {{else}}
      {{#promise-proxy-container
        tagName="div"
        class="loadable-row"
        proxy=aclsProxy
      }}
        {{#if (and aclViewActive (not filesHaveCompatibleAcl))}}
          {{#if effectiveReadonly}}
            <div class="alert alert-info alert-simple-info">
              {{tt this "differentAclReadonly"}}
            </div>
          {{else}}
            <div class="alert alert-warning alert-simple-info">
              {{#if viewModel.isAclIncompatibilityAccepted}}
                <div class="row">{{tt this "differentAclCleared.info"}}</div>
                <ul>
                  <li>{{tt this "differentAclCleared.discardInfo"}}</li>
                  <li>{{tt this "differentAclCleared.saveInfo"}}</li>
                </ul>
              {{else}}
                {{tt this "differentAcl"}}
                <div class="row alert-simple-info-btn">
                  {{#bs-button
                    class="btn btn-warning btn-sm open-acl-editor clear-permissions-btn"
                    onClick=(action "acceptAclIncompatibility")
                  }}
                    {{tt this "clearAcl"}}
                  {{/bs-button}}
                </div>
              {{/if}}
            </div>
          {{/if}}
        {{/if}}
        {{acl-editor
          users=spaceUsers
          groups=spaceGroups
          systemSubjects=systemSubjects
          acl=acl
          context=filesType
          readonly=effectiveReadonly
          class=(unless aclCompatible "hidden")
          onChange=(action "aclChanged")
        }}
      {{/promise-proxy-container}}
    {{/if}}
  {{else if effectiveReadonly}}
    <div class="alert alert-info">
      {{tt this "noAclDueToMixedFileTypesReadonly"}}
    </div>
  {{else}}
    <div class="alert alert-warning">
      {{tt this "noAclDueToMixedFileTypes"}}
    </div>
  {{/unless}}
{{/render-later}}