<table class="table one-table one-infinite-list fb-files-table">
  <thead class="fb-table-thead">
    {{#if headRowComponentName}}
      {{#component headRowComponentName
        previewMode=previewMode
        browserModel=browserModel
      }}
        {{#if headStatusBarComponentName}}
          {{component headStatusBarComponentName
            browserModel=browserModel
            invokeFileAction=invokeFileAction
          }}
        {{/if}}
      {{/component}}
    {{else}}
      {{!-- head row component should contain at least one th for items, if it's not
            provided then insert generic one
      --}}
      <th class="fb-table-col-items">
        <div class="fb-table-main-col-container">
          <div class="table-header-text">{{tt this "items"}}</div>
          <div class="table-header-status-bar">{{yield}}</div>
        </div>
      </th>
    {{/if}}
    {{#unless noItemsActions}}
      <th class="fb-table-col-actions-menu"></th>
    {{/unless}}
  </thead>
  <tbody class="fb-table-tbody">
    <tr class="first-row">
      <td colspan="9999" style={{firstRowStyle}}></td>
    </tr>
    <div class="table-start-row"></div>
    {{#each filesArray as |file|}}
      {{component rowComponentName
        class="data-row"
        file=file
        browserModel=browserModel
        previewMode=previewMode
        dirSizeStatsConfig=dirSizeStatsConfig
        noItemsActions=noItemsActions
        isSpaceOwned=isSpaceOwned
        spacePrivileges=spacePrivileges
        nameConflict=(contains file.index conflictNames)
        fileClipboardMode=(if (contains file fileClipboardFiles) fileClipboardMode null)
        isSelected=(contains file selectedItems)
        isDisabled=(contains file disabledItems)
        isLoadingOnIcon=(contains file.entityId loadingIconFileIds)
        touchTap=(action "fileTapped" file)
        touchHold=(action "fileTouchHeld" file)
        fastClick=(action "fileClicked" file)
        fileDoubleClicked=(action "fileDoubleClicked" file)
        openContextMenu=(action "openContextMenu" file)
        invokeFileAction=invokeFileAction
        fileActionsOpen=fileActionsOpen
        selectionContext=selectionContext
      }}
    {{/each}}
    {{#if (and initialLoad.isSettled fetchingNext)}}
      <tr class="loading-row">
        <td colspan="9999" class="special-row-cell loading-row-cell">
          {{spin-spinner-block
            sizeClass="sm"
            class="absolute-middle-centered"
          }}
        </td>
      </tr>
    {{/if}}
  </tbody>
</table>
<div class="table-bottom-spacing"></div>
{{#if initialLoad.isPending}}
  <div class="loading-dir-box">
    {{spin-spinner-block
      sizeClass="lg"
      class="absolute-middle-centered"
    }}
  </div>
{{/if}}
{{#if (and dirLoadError dirLoadErrorComponentName)}}
  {{component dirLoadErrorComponentName
    dir=dir
    previewMode=previewMode
    dirLoadError=dirLoadError
    browserModel=browserModel
  }}
{{/if}}
{{#if (and hasEmptyDirClass emptyDirComponentName)}}
  {{component emptyDirComponentName
    dir=dir
    previewMode=previewMode
    browserModel=browserModel
  }}
{{/if}}
{{#if showDirContextMenu}}
  {{#one-webui-popover
    class="file-actions-popover"
    popoverStyle=(concat-classes
      "with-dropdown"
      (if isInModal "over-modals")
    )
    padding=false
    popoverTrigger="manual"
    triggerSelector=(concat "#" elementId " .file-actions-trigger")
    open=fileActionsOpen
    registerApi=(action (mut contextMenuApi))
    placement="horizontal"
    as |popover|
  }}
    {{#click-outside action=(action "toggleFileActions" false)}}
      {{#popover-content-limit
        opened=(and popover.visible contextMenuRepositionTime)
      }}
        {{actions-popover-content
          actionsArray=contextMenuButtons
          actionClicked=(action "toggleFileActions" false)
          class="file-actions ps--focus"
        }}
      {{/popover-content-limit}}
    {{/click-outside}}
  {{/one-webui-popover}}
  <div class="file-actions-trigger floating-actions-trigger"></div>
{{/if}}

{{#if renderRefreshSpinner}}
  {{spin-spinner-block
    sizeClass="lg"
    class="absolute-middle-centered refresh-spinner"
  }}
{{/if}}
