{{#promise-proxy-container proxy=handleProxy}}
  {{#if handle}}
    {{#if xml}}
      {{#if (eq selectedMetadataType MetadataType.Edm)}}
        {{share-show/edm-editor
          class="fill-flex-using-column"
          xmlValue=xml
          readonly=true
        }}
      {{else}}
        {{share-show/open-data-preview
          class="fill-flex-using-column"
          xml=xml
          handleUrl=handle.url
          handleServiceName=handle.handleService.name
        }}
      {{/if}}
    {{else}}
      <p class="no-metadata-info">
        {{tt this "noMetadata"}}
      </p>
    {{/if}}
  {{else}}
    {{#promise-proxy-container proxy=handleServicesProxy}}
      {{#if handleServices.length}}
        {{#one-carousel
          activeSlideId=activeSlideOfCreator
          animated=false
          class="opendata-one-carousel full-height"
          as |carousel|
        }}
          {{#carousel.slide slideId="welcome"}}
            {{#content-info
              class="scroll-breakpoint-800 fill-flex-using-column content-info-publish-open-data-welcome"
              header=(tt this "publishWelcome.title")
              text=(tt this "publishWelcome.content")
              buttonAction=(action (mut publishOpenDataStarted) true)
              buttonLabel=(tt this "publishWelcome.publishButton")
              buttonDisabled=isWelcomeProceedDisabled
            }}
              <p>
                {{tt this "publishWelcome.handleServiceText"}}
                {{one-label-tip title=(tt this "publishWelcome.handleServiceTextMore")}}
              </p>
              <div class="row row-handle-service-select">
                {{#one-dropdown
                  triggerClass="select-handle-service"
                  dropdownClass="select-handle-service-dropdown"
                  placeholder=(tt this "publishWelcome.selectHandleServicePlaceholder")
                  searchField="name"
                  selected=selectedHandleService
                  options=handleServices
                  onchange=(action (mut selectedHandleService))
                  as |handleService|
                }}
                  <div class="option-container" data-handle-id={{handleService.entityId}}>
                    {{#truncated-string}}
                      {{name-conflict
                        item=(hash
                          name=handleService.name
                          conflictLabel=(truncate handleService.entityId 6 false)
                        )
                        separator=" #"
                      }}
                    {{/truncated-string}}
                  </div>
                {{/one-dropdown}}
              </div>
              <p class="metadata-type-text">
                {{tt this "publishWelcome.metadataTypeText"}}
                {{#one-label-tip tooltipClass="tooltip-lg tooltip-text-left"}}
                  <p>{{tt this "publishWelcome.metadataTypeMore.intro"}}</p>
                  <p>{{tt this "publishWelcome.metadataTypeMore.dublinCore"}}</p>
                  <p>{{tt this "publishWelcome.metadataTypeMore.edm"}}</p>
                  <p>{{tt this "publishWelcome.metadataTypeMore.outro"}}</p>
                {{/one-label-tip}}
              </p>
              <div class="row row-metadata-type-select">
                {{#one-dropdown
                  triggerClass="select-metadata-type"
                  dropdownClass="select-metadata-type"
                  placeholder=(tt this "publishWelcome.selectMetadataTypePlaceholder")
                  selected=selectedMetadataType
                  options=metadataTypes
                  searchEnabled=false
                  onchange=(action (mut selectedMetadataType))
                  as |metadataType|
                }}
                  <div class="option-container">
                    {{#truncated-string}}
                      {{tt this (concat "publishWelcome.metadataTypes." metadataType)}}
                    {{/truncated-string}}
                  </div>
                {{/one-dropdown}}
              </div>
            {{/content-info}}
          {{/carousel.slide}}
          {{#carousel.slide slideId="createMetadata" class="full-height" as |slide|}}
            {{#if (eq slide.state "active-from-right")}}
              {{#if (eq selectedMetadataType MetadataType.Edm)}}
                {{share-show/edm-editor
                  class="full-height"
                  xmlValue=xml
                  initialData=initialData
                  handleService=selectedHandleService
                  onUpdateXml=(action "updateXml")
                  onSubmit=(action "submit")
                  onBack=(action "back")
                }}
              {{else if (eq selectedMetadataType MetadataType.Dc)}}
                {{share-show/open-data-editor
                  xml=xml
                  initialData=initialData
                  handleService=selectedHandleService
                  onUpdateXml=(action "updateXml")
                  onSubmit=(action "submit")
                  onBack=(action "back")
                }}
              {{/if}}
            {{/if}}
          {{/carousel.slide}}
        {{/one-carousel}}
      {{else}}
        {{content-info
          class=(if (media "isMobile") "scroll-breakpoint-600" "scroll-breakpoint-500")
          header=(tt this "noHandleServices.title")
          text=(tt this "noHandleServices.content")
        }}
      {{/if}}
    {{/promise-proxy-container}}
  {{/if}}
{{/promise-proxy-container}}
