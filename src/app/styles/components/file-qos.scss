$qos-icon-size: 2.5em;
$color-qos-status-fulfilled: $color-one-success;
$color-qos-status-pending: $color-one-warning;

.file-qos-body {
  @import './file-qos/file-entry';
  @import './file-qos/file-qos-summary';
  @import './file-qos/qos-entry';

  .file-qos-bottom-toolbar {
    margin-top: 2em;
  }

  .qos-add-form-buttons {
    display: flex;
    justify-content: center;
    > :not(:first-child) {
      margin-left: 0.5em;
    }
  }

  // TODO: experimental style proposed by Ewa on UX meeting - maybe should be used
  // in every modal
  .table-info {
    // Bootstrap table margin-bottom is defined this way
    margin-top: ($line-height-computed * 0.75);
    .property-name.with-input {
      padding-left: 0;
    }
  }

  .qos-status-fulfilled {
    color: $color-qos-status-fulfilled;
  }
  .qos-status-pending,
  .qos-status-error {
    color: $color-qos-status-pending;
  }
  .one-icon-tagged.qos-status-impossible {
    color: $color-qos-status-pending;
    .one-icon-tag {
      color: $color-one-danger;
    }
  }
  .qos-status-empty {
    color: inherit;
  }
  .qos-status-impossible {
    color: $color-one-danger;
  }
  .qos-status-empty, .no-requirements {
    opacity: 0.4;
  }

  .file-qos-status.qos-status-impossible .one-icon-tag {
    color: $color-one-danger;
  }

  .label {
    line-height: initial;
  }

  .qos-subheader-container {
    display: flex;
    justify-content: space-between;

    @media (max-width: $screen-xs-max) {
      flex-direction: column;
      .qos-expression-copy-subheader {
        order: -2;
      }
    }
  }

  .qos-info-subheader {
    display: flex;
    align-items: center;
    .qos-evaluation-info {
      flex-grow: 1;
    }
    .qos-expression-copy-icon-container {
      font-size: 2em;
    }
  }

  .qos-subheader {
    margin-top: 0.8em;
    font-size: $font-size-small;
    // this class is so custom, because of need of aligning icon to right on desktop
    // and to left on mobile

    .expression-clipboard-btn {
      border: 0;
      background: transparent;
      color: $color-one-mint;
      padding: 0;

      &:hover {
        color: darken($color-one-mint, 20%);
      }
    }

    &.qos-expression-copy-subheader {
      @media (min-width: $screen-xs-min) {
        margin-right: -0.3em;
      }
      @media (max-width: $screen-xs-max) {
        margin-left: -0.3em;
        .expression-clipboard-btn {
          display: inline-flex;
        }
        .copy-expression-icon-container {
          order: -1;
        }
        .copy-expression-text {
          padding-left: 0.15em;
        }
      }
    }
    .inherited-text {
      white-space: nowrap;
      margin-right: 0.4em;
    }
    @media (max-width: $screen-xs-max) {
      margin-left: 0;
    }
  }

  .qos-add {
    .btn-suggestions-trigger-container {
      position: absolute;
      margin-top: $padding-base-vertical;

      @media (max-width: $screen-xs-max) {
        margin-top: 0;
        // empirical height of small button and small margin
        top: -36px;
        right: 0;
      }
    }
    .qos-info-row-expression .property-name {
      display: flex;
      .qos-label-expression {
        flex-grow: 1;
      }
      .qos-paste-expression-trigger {
        font-size: 2em;
        margin-top: -0.2em;
      }
    }
    .spinner-qos-expression-editor {
      left: 0;
      transform: translateY(-50%) translateY(6px) translateX(12px);
    }
    .query-builder {
      .enter-text-link {
        flex-grow: 0;
        padding-right: 0.2em;
      }
    }
  }

  .qos-info-selector-label {
    margin-right: 1em;
  }
}

.tab-qos {
  .qos-status-fulfilled {
    color: $color-qos-status-fulfilled;
  }
  .qos-status-pending,
  .qos-status-error {
    color: $color-qos-status-pending;
  }
  .one-icon-tagged.qos-status-impossible {
    color: $color-qos-status-pending;
    .one-icon-tag {
      color: $color-one-danger;
    }
  }
  .qos-status-empty {
    color: inherit;
  }
  .qos-status-impossible {
    color: $color-one-danger;
  }
}
