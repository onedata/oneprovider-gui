$color-qos-entry-info-block-border: rgba(0, 0, 0, 0.1);

// using fixed colors because sticky header should cover the content (no transparency)
$color-qos-entry-info-block-bg-level-1: #fafafa;
$color-qos-entry-info-block-bg-level-2: #f2f2f2;

.qos-entry {
  padding: $padding-large-vertical 0;
  padding-top: 1em;
  padding-bottom: $padding-large-horizontal;

  & + .qos-entry {
    border-top: 1px solid $main-border-color;
  }
  .qos-main-line {
    display: flex;
    flex-direction: column;
    .qos-expression-text-field {
      display: flex;
      flex-direction: column;
      flex-grow: 1;
    }
    .qos-general-info {
      display: flex;
      align-items: center;
    }
    > .clipboard-line {
      margin-top: 0px;
    }
  }
  .header-replicas-number {
    display: inline-block;
    flex-grow: 1;
  }
  .spinner-block-path {
    margin-top: 2px;
    margin-left: 6px;
  }
  .qos-buttons {
    place-self: flex-start;
    display: flex;
    align-items: center;
    // Without this style .remove-qos-trigger button moved a bit to the right
    // causes modal to show horizontal scrollbar for a couple of milliseconds.
    overflow: hidden;

    .clipboard-btn {
      display: flex;
      align-items: center;
      background: none;
      border: none;
      right: 0;
      outline: none;
      margin-left: 0;
      margin-right: 0;
      margin-bottom: 0;
      padding: 0;
      .copy-btn-icon {
        color: $text-color;
        position: relative;
      }
    }
  }
  .remove-qos-trigger {
    margin-right: -0.15em;
  }
  .icon-trigger {
    line-height: 40px;
    margin-left: 4px;
    font-size: $qos-icon-size;
    &.remove-qos-trigger {
      &.enabled {
        &:hover {
          color: $color-one-danger;
        }
      }
      &.disabled {
        opacity: 0.3;
        // `!important` to override inline styles of clickable components
        cursor: not-allowed !important;
      }
    }
  }

  .qos-status-icon-container {
    // not needed, as the icon is moved left to align left
    margin-right: 0;
    .one-icon {
      // align left
      transform: translateX(-16%);
      font-size: $qos-icon-size;
    }
  }
  .remove-icon {
    &:not(:hover) {
      color: inherit;
    }
    .one-icon {
      font-size: $qos-icon-size;
    }
  }
  .qos-path-subheader {
    display: flex;
    // adjust icons manually because of their internal SVG padding
    .oneicon-inheritance {
      left: 0.08em;
    }
    .file-path {
      min-width: 0;
      width: 100%;
    }
  }
  .qos-info-subheader {
    // adjust icons manually because of their internal SVG padding
    .oneicon-support {
      left: -0.05em;
    }
  }

  .qos-charts-subheader {
    .oneicon-overview {
      top: calc(50% + 1px);
    }
  }

  .qos-entry-details-switch {
    display: flex;
    align-items: center;
  }

  // empirical value when there is no space left for switcher with its label
  @media (max-width: 570px) {
    .qos-info-subheader {
      flex-direction: column;
      align-items: flex-start;
    }
    .qos-entry-details-switch {
      align-self: flex-end;
      margin-top: 0.5em;
    }
  }
  @media (max-width: 370px) {
    .qos-info-selector-label {
      display: none;
    }
  }

  .qos-entry-info-block {
    margin-top: 0.8em;
    background-color: $color-qos-entry-info-block-bg-level-1;
    border: 1px solid $color-qos-entry-info-block-border;
    border-radius: $border-radius-base;

    .qos-entry-logs .table.event-log-table.with-sticky-header thead {
      background-color: $color-qos-entry-info-block-bg-level-1;
    }
  }

  .info-block-header {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    padding: 1em;
    padding-bottom: 0;

    .title {
      @include font-semibold();
      flex-grow: 1;
      margin-right: 1em;
      text-transform: uppercase;
    }
  }

  .charts-plots {
    display: flex;
    margin-left: 1em;
    margin-top: 1em;

    @media (max-width: 800px) {
      flex-wrap: wrap;

      .one-time-series-chart-plot {
        flex-basis: 100%;
      }
    }
  }

  .one-time-series-chart-plot {
    flex-basis: 50%;
    height: 300px;
    min-width: 0;
    margin-right: 1em;
    margin-bottom: 1em;
    background-color: rgba(255, 255, 255, 0.7);
    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 3px;
    border: 1px solid rgba(0, 0, 0, 0.03);
    border-radius: $border-radius-base;
  }

  .qos-entry-logs {
    height: 280px;
    position: relative;
    .table.event-log-table.with-sticky-header thead {
      // a hack to prevent rendering issues (transparent 1px line on top of sticky header)
      // probably caused by rendering rounded corner of container
      top: -1px;
      background-color: $color-qos-entry-info-block-bg-level-1;
    }
    .event-log-table-container.on-bottom + .bottom-shadow-keeper {
      @include hide-before-shadow;
    }
  }

  // make a pseudo-shadow on bottom of the above container
  .bottom-shadow-keeper {
    position: relative;
    width: 100%;
    @include before-top-shadow;

    &::before {
      bottom: calc(100% + 1px);
      width: calc(100% - 2px);
      left: 1px;
      border-radius: $border-radius-base;
    }
  }

  // this rule should be declared after bottom-shadow-keeper overrides
  .qos-entry-logs.on-bottom + .bottom-shadow-keeper {
    @include hide-before-shadow;
  }
}

.one-collapsible-list-item-content {
  .qos-entry-info-block {
    background-color: $color-qos-entry-info-block-bg-level-2;
  }

  .qos-entry-logs .table.event-log-table.with-sticky-header thead {
    background-color: $color-qos-entry-info-block-bg-level-2;
  }
}
